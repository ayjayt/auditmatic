#!/bin/bash
if [ ! $AA_INTERACTIVE = "true" ]; then
	exit
fi
title find_repos

REPOS_TRACKED="$AA_CONFIGDIR/repos_tracked"
REPOS_IGNORED="$AA_CONFIGDIR/repos_ignored"
REPOS_TS="$AA_CONFIGDIR/repos_ts"
touch "$REPOS_TS"
touch "$REPOS_TRACKED"
touch "$REPOS_IGNORED"

if chk_int "$REPOS_TS" "60*60*2" || chk_all; then
	pass
else
	echo "Skipping..."
	exit 0
fi
	

ALL_MY_REPOS=$(find $HOME \( -path "*/.git/*" -o -path "$HOME/go/src" \) -prune -o -type d -name ".git" -exec dirname {} \;)

gitcheck() {
		git -C ${1} status --short
		if [ -n "$(git -C ${1} remote)" ]; then
			git -C ${1} fetch --all | grep -v "Fetching origin"
		fi
		if [ -n "$(git -C ${1} diff HEAD @{upstream})" ]; then
			git -C ${1} status | head -n 2 | tail -n 1
		fi
}

while read -r LINE; do
	if grep "$REPOS_IGNORED" -qe "${LINE}"; then
		pass
	elif grep "$REPOS_TRACKED" -qe "${LINE}"; then
		OUTPUT="$(gitcheck "${LINE}")"
		if [ -n "${OUTPUT}" ]; then
			echo -e "${BOLD}${LINE}${NORM}"
			echo -e "$OUTPUT"
		fi
	else
		NEWREPOS+="$LINE"$'\n'
	fi
done <<< "$ALL_MY_REPOS"
for REPO in $NEWREPOS; do
		echo -e "$REPO"
		gitcheck "$REPO"
	select opt in TRACK IGNORE; do
		case $opt in
			"TRACK")
				echo "$REPO" >> $REPOS_TRACKED
				;;
			"IGNORE")
				echo "$REPO" >> $REPOS_IGNORED
				;;
			*)
				echo "Invalid Response"
				;;
		esac
		break
	done
done
